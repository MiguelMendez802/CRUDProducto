package presentacion;

import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.Producto;

/**
 *
 * @author Miguel
 */
public class JFrameProducto extends javax.swing.JFrame {

    /**
     * Creates new form Producto
     */
    public JFrameProducto() {
        initComponents();
        cargarTabla(0);
        mensaje();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblTemperatura = new javax.swing.JLabel();
        lblValorBase = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtTemperatura = new javax.swing.JTextField();
        txtValorBase = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setPreferredSize(new java.awt.Dimension(964, 554));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PRODUCTO");
        jLabel1.setToolTipText("");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jPanel3.setBackground(new java.awt.Color(153, 204, 255));

        lblId.setFont(new java.awt.Font("Roboto Black", 1, 15)); // NOI18N
        lblId.setForeground(new java.awt.Color(255, 255, 255));
        lblId.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\id.png")); // NOI18N
        lblId.setText("ID:");

        lblNombre.setFont(new java.awt.Font("Roboto Black", 1, 15)); // NOI18N
        lblNombre.setForeground(new java.awt.Color(255, 255, 255));
        lblNombre.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\producto.png")); // NOI18N
        lblNombre.setText("NOMBRE:");

        lblTemperatura.setFont(new java.awt.Font("Roboto Black", 1, 15)); // NOI18N
        lblTemperatura.setForeground(new java.awt.Color(255, 255, 255));
        lblTemperatura.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\temperatura.png")); // NOI18N
        lblTemperatura.setText("TEMPERATURA:");

        lblValorBase.setFont(new java.awt.Font("Roboto Black", 1, 15)); // NOI18N
        lblValorBase.setForeground(new java.awt.Color(255, 255, 255));
        lblValorBase.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\valor.png")); // NOI18N
        lblValorBase.setText("VALOR BASE:");

        txtId.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N

        txtTemperatura.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtTemperatura.setToolTipText("");
        txtTemperatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTemperaturaKeyTyped(evt);
            }
        });

        txtValorBase.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtValorBase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorBaseKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTemperatura)
                    .addComponent(lblValorBase))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(txtNombre)
                    .addComponent(txtId)
                    .addComponent(txtValorBase))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperatura)
                    .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValorBase)
                    .addComponent(txtValorBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 204, 255));

        btnGuardar.setBackground(new java.awt.Color(102, 153, 255));
        btnGuardar.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\save.png")); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setBackground(new java.awt.Color(102, 153, 255));
        btnActualizar.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\update.png")); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.setBorder(null);
        btnActualizar.setEnabled(false);
        btnActualizar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(102, 153, 255));
        btnEliminar.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\delete.png")); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.setBorderPainted(false);
        btnEliminar.setEnabled(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnEliminar.setIconTextGap(8);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(102, 153, 255));
        btnBuscar.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\read.png")); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setBorder(null);
        btnBuscar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(102, 153, 255));
        btnLimpiar.setFont(new java.awt.Font("Roboto Medium", 1, 18)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\clean.png")); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBorder(null);
        btnLimpiar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\ADMIN\\Documents\\NetBeansProjects\\Reto5_2\\src\\images\\logo.png")); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(200, 5));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addGap(77, 77, 77))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(63, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bg.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 360, 560));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        jLabel2.setText("LISTA DE PRODUCTOS");

        tblProductos.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProductos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        bg.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 610, 560));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void mensaje(){
        ImageIcon info = new ImageIcon("src/images/information.png");
        
        JOptionPane.showMessageDialog(this, 
        "*** Indicación Opcional:\n" +
        "\n"+
        "- Se hace uso de la familia de fuentes Roboto, para mejorar experiencia instalarlas en el ordenador: https://fonts.google.com/specimen/Roboto\n" +
        "\n"+
        "*** Indicaciones Importantes:\n" +
        "\n"+
        "- Los botones Actualizar y Eliminar se activarán cuando seleccione un elemento de la tabla.\n" +
        "- El botón Limpiar ademós permite cancelar operaciones en dicho caso y regresa a un estado inicial.\n" +
        "- Los campos de texto ID, Temperatura y Valor base solo permiten el ingreso de números.\n" +
        "- Al editar un producto existente, el campo ID se bloquea.\n" +
        "- El orden de búsqueda al presionar el botón Buscar prioriza el ID de un producto. En caso de no pasarle un ID, busca los productos según los demás datos, para lo cual lo puede hacer por:\n" +
        ". Nombre\n" +
        ". Temperatura \n" +
        ". Valor Base\n" +
        ". Nombre-temperatura\n" +
        ". Nombre-valor\n" +
        ". Temperatura-valor\n" +
        ". Nombre-temperatura-valor",
        "Información Importante", JOptionPane.WARNING_MESSAGE, info
        );
    }
    
    public void limpiar(){
            txtId.setText("");
            txtNombre.setText("");
            txtTemperatura.setText("");
            txtValorBase.setText("");
        }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:

        ImageIcon alerta = new ImageIcon("src/images/warning.png");
        ImageIcon guardado = new ImageIcon("src/images/successSave.png");

        String id = txtId.getText();
        String nombre = txtNombre.getText();
        String temperatura = txtTemperatura.getText();
        String valorBase = txtValorBase.getText();

        if(id.isEmpty() || nombre.isEmpty() || temperatura.isEmpty() || valorBase.isEmpty()){
            JOptionPane.showMessageDialog(this, "Diligencie los campos vacíos para guardar un producto", "Campos vacíos", JOptionPane.WARNING_MESSAGE, alerta);
        }else{
            Producto p = new Producto();
            p.setId(id);
            p.setNombre(nombre);
            p.setTemperatura(Double.parseDouble(temperatura));
            p.setValorBase(Double.parseDouble(valorBase));

            if (p.guardarProducto() == true) {
                JOptionPane.showMessageDialog(this, "¡Producto guardado correctamente!", "Producto Guardado", JOptionPane.INFORMATION_MESSAGE, guardado);
                limpiar();
                cargarTabla(0);
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo guardar el producto");
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        ImageIcon alerta = new ImageIcon("src/images/warning.png");
        ImageIcon eliminado = new ImageIcon("src/images/successDelete.png");

        int indice = tblProductos.getSelectedRow();

        if(indice >= 0){

            Producto p = new Producto();

            String id = tblProductos.getValueAt(indice, 0).toString();
            String nombre = tblProductos.getValueAt(indice, 1).toString();

            p.setId(id);

            int option = JOptionPane.showConfirmDialog(this, "Seguro que desea eliminar el producto " + nombre.toUpperCase(), "Eliminar Producto", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, alerta);

            if(option == 0){
                p.borrarProducto();
                limpiar();
                cargarTabla(0);
                if(p.borrarProducto() == true){
                    JOptionPane.showMessageDialog(this, "¡El producto " + nombre.toUpperCase() + " fue eliminado correctamente!", "Producto Eliminado", JOptionPane.INFORMATION_MESSAGE, eliminado);

                    btnActualizar.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    btnGuardar.setEnabled(true);
                    btnLimpiar.setEnabled(true);
                    btnBuscar.setEnabled(true);

                    txtId.setEditable(true);
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione en la tabla el producto que desea eliminar", "Seleccione un Producto", JOptionPane.WARNING_MESSAGE, alerta);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        // TODO add your handling code here:
        ImageIcon alerta = new ImageIcon("src/images/warning.png");

        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnGuardar.setEnabled(false);
        btnLimpiar.setEnabled(true);
        btnBuscar.setEnabled(false);

        int indice = tblProductos.getSelectedRow();
        String id = tblProductos.getValueAt(indice, 0).toString();

        Producto p = new Producto();
        p.setId(id);

        Producto resultado = p.seleccionarProductoId();

        if(resultado != null){
            String nombre = resultado.getNombre();
            Double temperatura = resultado.getTemperatura();
            Double valorBase = resultado.getValorBase();

            txtId.setText(id);
            txtNombre.setText(nombre);
            txtTemperatura.setText(""+temperatura);
            txtValorBase.setText(""+valorBase);

            txtId.setEditable(false);

            if(txtId.isEditable() == false){
                btnActualizar.setEnabled(true);
                btnEliminar.setEnabled(true);
                btnGuardar.setEnabled(false);
                btnLimpiar.setEnabled(true);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Producto no encontrado", "Producto no encontrado", JOptionPane.WARNING_MESSAGE, alerta);
        }
    }//GEN-LAST:event_tblProductosMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtId.setText("");
        txtNombre.setText("");
        txtTemperatura.setText("");
        txtValorBase.setText("");

        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGuardar.setEnabled(true);
        btnBuscar.setEnabled(true);

        cargarTabla(0);

        txtId.setEditable(true);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if( c < '0' || c > '9' ) evt.consume();
    }//GEN-LAST:event_txtIdKeyTyped

    private void txtTemperaturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemperaturaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if( c < '0' || c > '9' ) evt.consume();
    }//GEN-LAST:event_txtTemperaturaKeyTyped

    private void txtValorBaseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBaseKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();

        if( c < '0' || c > '9' ) evt.consume();
    }//GEN-LAST:event_txtValorBaseKeyTyped

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        ImageIcon alerta = new ImageIcon("src/images/warning.png");
        ImageIcon actualizado = new ImageIcon("src/images/successUpdate.png");

        String id = txtId.getText();
        String nombre = txtNombre.getText();
        double temperatura = Double.parseDouble(txtTemperatura.getText());
        double valorBase = Double.parseDouble(txtValorBase.getText());

        Producto p = new Producto(id,nombre,temperatura,valorBase);

        int option = JOptionPane.showConfirmDialog(this, "Seguro que desea actualizar el producto " + nombre.toUpperCase(), "Actualizar Producto", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, alerta);

            if(option == 0){

                p.actualizarProducto();
                limpiar();
                cargarTabla(0);

                if(p.actualizarProducto() == true){
                    JOptionPane.showMessageDialog(this, "¡El producto " + nombre.toUpperCase() + " fue actualizado correctamente!", "Producto Actualizado", JOptionPane.INFORMATION_MESSAGE, actualizado);

                    btnActualizar.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    btnGuardar.setEnabled(true);
                    btnLimpiar.setEnabled(true);
                    btnBuscar.setEnabled(true);

                    txtId.setEditable(true);
                }
            }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        ImageIcon alerta = new ImageIcon("src/images/warning.png");

        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnGuardar.setEnabled(true);
        btnLimpiar.setEnabled(true);

        txtId.setEditable(true);

        String id = txtId.getText();
        String nombre = txtNombre.getText();
        String temperatura = txtTemperatura.getText();
        String valorBase = txtValorBase.getText();

        if(id.isEmpty() && nombre.isEmpty() && temperatura.isEmpty() && valorBase.isEmpty()){
            JOptionPane.showMessageDialog(this, "Ingrese los datos del producto a buscar", "Campos de busqueda vacío", JOptionPane.WARNING_MESSAGE, alerta);
            cargarTabla(0);
        }else{
            cargarTabla(1);
            limpiar();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    public void cargarTabla(int opcion){

        ImageIcon alerta = new ImageIcon("src/images/warning.png");

        Object[][] fila = new Object[1][5];
        Object[] columnas = {"ID", "NOMBRE", "TEMPERATURA", "VALOR BASE", "COSTO"};

        DefaultTableModel modelo;
        modelo = new DefaultTableModel(){

            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }

        };
        modelo.setColumnIdentifiers(columnas);
        tblProductos.setModel(modelo);

        Producto p = new Producto();
        List<Producto> listaProductos = p.listarProductos();

        if(opcion == 0){
            if (listaProductos != null) {
                for(Producto producto : listaProductos){
                    fila[0][0] = producto.getId();
                    fila[0][1] = producto.getNombre();
                    fila[0][2] = producto.getTemperatura();
                    fila[0][3] = producto.getValorBase();
                    fila[0][4] = producto.calcularCostoDeAlmacenamiento((double) fila[0][2]);
                    modelo.addRow(fila[0]);
                }
            } else {
                JOptionPane.showMessageDialog(this, "No hay productos en la base de datos", "Base de datos vacía", JOptionPane.WARNING_MESSAGE, alerta);
            }
        }else{
            String id = txtId.getText();
            String nombre = txtNombre.getText();
            String temperatura = txtTemperatura.getText();
            String valorBase = txtValorBase.getText();

            if(id.isEmpty()){
                int opcionsql;
                if (!nombre.isEmpty() && !temperatura.isEmpty() && !valorBase.isEmpty()) {
                    opcionsql = 7;
                    p.setNombre(nombre);
                    p.setTemperatura(Double.parseDouble(temperatura));
                    p.setValorBase(Double.parseDouble(valorBase));
                } else if (!nombre.isEmpty() && temperatura.isEmpty() && valorBase.isEmpty()) {
                    opcionsql = 1;
                    p.setNombre(nombre);
                } else if (nombre.isEmpty() && !temperatura.isEmpty() && valorBase.isEmpty()) {
                    opcionsql = 2;
                    p.setTemperatura(Double.parseDouble(temperatura));
                } else if (nombre.isEmpty() && temperatura.isEmpty() && !valorBase.isEmpty()) {
                    opcionsql = 3;
                    p.setValorBase(Double.parseDouble(valorBase));
                } else if (!nombre.isEmpty() && !temperatura.isEmpty() && valorBase.isEmpty()) {
                    opcionsql = 4;
                    p.setNombre(nombre);
                    p.setTemperatura(Double.parseDouble(temperatura));
                } else if (!nombre.isEmpty() && temperatura.isEmpty() && !valorBase.isEmpty()) {
                    opcionsql = 5;
                    p.setNombre(nombre);
                    p.setValorBase(Double.parseDouble(valorBase));
                } else {
                    opcionsql = 6;
                    p.setTemperatura(Double.parseDouble(temperatura));
                    p.setValorBase(Double.parseDouble(valorBase));
                }
                
                List<Producto> listaProductosNoId = p.listarProductosNoId(opcionsql);
                if (!listaProductosNoId.isEmpty()) {
                    for (Producto producto : listaProductosNoId) {
                        fila[0][0] = producto.getId();
                        fila[0][1] = producto.getNombre();
                        fila[0][2] = producto.getTemperatura();
                        fila[0][3] = producto.getValorBase();
                        fila[0][4] = producto.calcularCostoDeAlmacenamiento((double) fila[0][2]);
                        modelo.addRow(fila[0]);
                    }
                } else {
                        JOptionPane.showMessageDialog(this, "Los productos que esta buscando no existen en la base de datos", "Productos no encontrado", JOptionPane.WARNING_MESSAGE, alerta);
                        cargarTabla(0);
                }  
            }else{
                p.setId(id);
                Producto resultado = p.seleccionarProductoId();
                if (resultado != null) {
                    fila[0][0] = resultado.getId();
                    fila[0][1] = resultado.getNombre();
                    fila[0][2] = resultado.getTemperatura();
                    fila[0][3] = resultado.getValorBase();
                    fila[0][4] = resultado.calcularCostoDeAlmacenamiento((double) fila[0][2]);
                    modelo.addRow(fila[0]);
                } else {
                    JOptionPane.showMessageDialog(this, "El producto no existe", "Producto no encontrado", JOptionPane.WARNING_MESSAGE, alerta);
                    cargarTabla(0);
                }
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTemperatura;
    private javax.swing.JLabel lblValorBase;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTemperatura;
    private javax.swing.JTextField txtValorBase;
    // End of variables declaration//GEN-END:variables
}
